export const DATA_ARRAY = [
  {
    title: "Введение в HTML",
    description: ` Для того, чтобы сделать сайт, нужно знать много разных веб языков.

Языки HTML и CSS предназначены для верстки сайтов (верстка - это размещение элементов сайта по нужным местам). Язык PHP нужен для программирования сайта (с его помощью можно, к примеру, сделать регистрацию пользователей). Язык JavaScript нужен для того, чтобы "оживить" сайт: к примеру, сделать меняющиеся картинки (слайдер).`,
    task: `что такое HTML?`,
  },
  {
    title: "Язык HTML",
    description: ` Язык HTML - это основа web сайтов, с его помощью создается каркас страницы, которую вы видите в браузере. Если сравнивать страницу сайта и обычную бумажную книгу, то на сайте, как и в книге, есть абзацы и заголовки.

В книге есть название всей книги (по сути самый главный заголовок), есть названия глав, параграфов в этих главах и так далее. Заголовки, абзацы и другие блоки можно выделить и на странице сайта. Это делается с помощью HTML тегов. `,
    task: `что такое HTML?`,
  },
  {
    title: "HTML теги",
    description: `HTML теги - это специальные команды для браузера. Они говорят ему, что, к примеру, следует считать заголовком страницы, а что абзацем.

Теги строятся по такому принципу: уголок <, потом имя тега, а потом уголок >. Имя тега может состоять из английских букв и цифр. Примеры тегов:

<h1>
<p>
<b>
Теги обычно пишутся парами - открывающий тег и соответствующий ему закрывающий. Разница между открывающим и закрывающим тегами в том, что в закрывающем теге после уголка < стоит слеш /.

К примеру, <p> - так я открыл тег, а так - </p> - я его закрыл. Все, что попадает между открывающим и закрывающим тегами, подпадает под воздействие нашего тега.

Бывают теги, которые не нужно закрывать, например, <br> или <img>.`,
    task: `Что такое HTML теги?`,
  },
  {
    title: "Атрибуты",
    description: `В тегах также могут размещаться атрибуты - специальные команды, которые расширяют действие тега. Атрибуты размещаются внутри открывающего тега в таком формате:

<тег атрибут1="значение" атрибут2="значение">
Кавычки могут быть любыми - одинарными или двойными, допустимо их вообще их не ставить, если значение атрибута состоит из одного слова (но это не желательно)..`,
    task: `Что такое HTML Атрибуты?`,
  },
  {
    title: "Основная структура страницы HTML",
    description: `Страница сайта - это обычный текстовый файл с расширением .html. Внутри этого файла и хранится текст HTML страницы вместе с тегами. Этот файл обязательно должен иметь следующие теги: тег <html>, который должен содержать в себе текст всего сайта (все, что написано вне этого тега, браузером будет проигнорировано), а внутри него должны быть еще два тега: тег <head> для служебного содержимого страницы и тег <body> - для основного текста, который и виден на экране браузера.

В служебное содержимое, которое располагается внутри тега <head>, входит много различных вещей, но пока нам нужны только две из них. Это тег <title>, задающий название страницы, которое будет видно во вкладке браузера, и тег <meta>, который задает кодировку страницы (она ставится в атрибуте charset и обычно имеет значение utf-8).

Кроме того, перед тегом <html> обычно пишется конструкция doctype, которая указывает версию языка HTML, на которой сделан сайт. Актуальная сейчас версия языка имеет номер пять и доктайп для нее должен выглядеть так - <!DOCTYPE html>.

Итак, давайте посмотрим на основную структуру страницы:

<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>Это заголовок тайтл</title>
	</head>
	<body>
		Это основное содержимое страницы.
	</body>
</html>
№1`,
    task: `что такое doctype?`,
  },
  {
    title: "Абзацы",
    description: `Одним из основных элементов страницы являются абзацы. Их можно сравнить с абзацами в книге - каждый абзац начинается с новой строки и имеет так называемую красную строку (это когда первая строка текста абзаца немного отступает вправо). По умолчанию красной строки нет, но ее легко сделать (об этом чуть позже).

Абзац создается с помощью тега <p> таким образом:

<p>
	Это абзац.
</p>
<p>
	Это еще один абзац.
</p>
<p>
	И еще один абзац.
</p>
№1⊗mkPmHLBT

Создайте на вашей странице 5 абзацев с каким-нибудь текстом. Посмотрите, как эти абзацы будут выглядеть в браузере.

Заголовки страницы
Кроме абзацев важное значение на странице имеют заголовки. Их также можно сравнить с заголовками из книги - каждая глава имеет свой заголовок (название этой главы) и разбита на параграфы, которые тоже имеют свои заголовки. Ну, а основной текст страницы располагается в абзацах.

Заголовки создаются с помощью тегов <h1>, <h2>, <h3>, <h4>, <h5>, <h6>. Они имеют разную степень важности. В заголовке h1 следует располагать название всей HTML страницы, в h2 - название блоков страницы, в h3 - название подблоков и так далее.

Все заголовки по умолчанию жирные и имеют разный размер (это можно поменять через CSS, но об этом позже). Для примера сделаем заголовки всех уровней:

<h1>Заголовок h1</h1>
<h2>Заголовок h2</h2>
<h3>Заголовок h3</h3>
<h4>Заголовок h4</h4>
<h5>Заголовок h5</h5>
<h6>Заголовок h6</h6>
№2⊗mkPmHLBT

Скопируйте приведенный выше код себе и запустите его в браузере. Посмотрите, как отличаются размеры заголовков.

№3⊗mkPmHLBT

Сделайте заголовок h1. Ниже сделайте заголовок h2, а под ним - абзац с текстом. После абзацев сделайте еще один заголовок h2, а под ним - 2 абзаца с текстом.

Жирный
Вы уже знаете, что заголовки по умолчанию жирные. Однако, можно сделать жирным и обычный текст - достаточно взять его в тег <b>. Смотрите пример:

<p>
	Это обычный текст, а это <b>жирный</b> текст.
</p>
№4⊗mkPmHLBT

Проверьте работу тега <b> на вашей странице.

Курсив
Кроме жирного можно сделать также и курсив с помощью тега <i>:

<p>
	Это обычный текст, а это <i>курсивный</i> текст.
</p>
№5⊗mkPmHLBT

Проверьте работу тега <i> на вашей странице.

Замечания
Обратите внимание на то, что теги <b> и <i> следует использовать внутри какого-либо другого тега, например абзаца. В этом случае абзацы создают общую структуру страницы (абзацы и заголовки), а указанные теги делают жирным или курсивом отдельные кусочки текста.`,
    task: `Сколько заголовков первого уровня может быть?`,
  },
  {
    title: "Упорядоченные и неупорядоченные списки в HTML",
    description: `Наряду с абзацами и заголовками существует еще один важный элемент страницы - это списки. Такие элементы наверняка знакомы всем пользователям интернета. Они представляют собой перечисление чего-либо (список) по пунктам. Возле каждого пункта списка обычно стоит закрашенный кружок (он называется маркер списка).

Списки создаются с помощью тега <ul>, внутри которого обязательно должны идти теги <li>. Тег ul задает сам список, а в теги li следует размещать пункты списка (то есть одному li соответствует один маркер списка). Смотрите пример:

<ul>
	<li>пункт списка</li>
	<li>пункт списка</li>
	<li>пункт списка</li>
	<li>пункт списка</li>
	<li>пункт списка</li>
</ul>
Результат выполнения кода:

`,
    task: `Какие бывают списки ?`,
  },
    {
    title: "Списки с номерами",
    description: `Списки, созданные через тег ul, называются неупорядоченными списками. Такое название им дано потому, что существуют еще и упорядоченные списки, у которых вместо маркеров-точек будут маркеры-цифры. Такие списки вместо тега ul имеют тег <ol>, а пункты таких списков также создаются через теги li.

Удобство упорядоченных списков в том, что я могу вставить новый пункт списка в любое место - и нумерация сама перестроится (то есть вам не приходится за ней следить в случае каких-либо изменений, как было бы в том случае, если бы вы расставляли ее вручную).

Давайте сделаем упорядоченный список, используя тег ol:

<ol>
	<li>пункт списка</li>
	<li>пункт списка</li>
	<li>пункт списка</li>
	<li>пункт списка</li>
	<li>пункт списка</li>
</ol>
`,
    task: `создайте 2 списка и задайте им зеленый цвет?`,
  },
];
